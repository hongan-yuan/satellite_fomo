# -*- coding: utf-8 -*-
"""
@Time : 5/7/2024 4:21 PM
@Author: Honggang Yuan
@Email: honggang.yuan@nokia-sbell.com
Description:
    Simulating the microservice deployed onto satellites
"""
from typing import Dict, Optional, List

import numpy as np
from pydantic import BaseModel

np.random.seed = 42


class Microservice(BaseModel):
    """
    Microservice
    """
    id: int = 0  # number of microservice
    dataVol: float = 0.0  # the data generated by microservice ... unit: MB
    replica_num: int = 0  # number of replica of service ... int

    isStartPoint: bool = False  # is the start microservice
    isEndPoint: bool = False  # is the end microservice

    successor: Dict = {int: float}  # the successor microservice set ... number: data_transfer
    predecessor: Dict = {int: float}  # the predecessor microservice set ... number: data_transfer

    deployment: Optional[List] = []  # the list of satellite used to deploy microservice_i


if __name__ == '__main__':
    microservice = Microservice(id=0, dataVol=13.5, replica_num=3,
                                isEndPoint=False, isStartPoint=True,
                                successor={1: 13.5}, predecessor={1: 0})
    MicroserviceCluster = []
    microservice_cnt = 30
    dataVol_mean = 50
    dataVol_variance = 4
    std_dev = np.sqrt(dataVol_variance)
    micro_dataVols = np.round(np.random.normal(loc=dataVol_mean, scale=std_dev, size=microservice_cnt), 2)
    print(micro_dataVols)
    for i in range(microservice_cnt):
        microservice = Microservice(id=i,
                                    dataVol=micro_dataVols[i],
                                    replica_num=np.random.randint(2, 6),
                                    isStartPoint=False,
                                    isEndPoint=False,
                                    successor={0: 0},
                                    predecessor={0: 0})
        MicroserviceCluster.append(microservice)
    for service in MicroserviceCluster:
        print(service)
